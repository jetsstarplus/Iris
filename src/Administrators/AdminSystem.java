/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Administrators;


import Databases.DatabaseConnection;
import Display.Launcher;
import heightech.AddItem;
import heightech.AddUser;
import heightech.Inventory;
import heightech.InventoryQuery;
import heightech.ItemQuery;
import heightech.Items;
import heightech.MyDisplayModel;
import heightech.SupplierDisplayModel;
import heightech.Suppliers;
import heightech.UpdateInventory;
import heightech.UserQuery;
import heightech.UserSetters;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Image;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.PreparedStatement;
//import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.WARNING_MESSAGE;
import static javax.swing.JOptionPane.YES_NO_CANCEL_OPTION;
import javax.swing.JTable;
//import javax.swing.JTextField;
//import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;

/**
 *
 * @author User
 */
public class AdminSystem extends javax.swing.JFrame {

    /**
     * Creates new form AdminSystem
     */
   
    public AdminSystem() {
        super("Iris Vision Dynamics ~Administrator");
        initComponents();
        
        populateJtable();
        
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        
        int screenheight = screenSize.height-5;
        int screenwidth = screenSize.width;
       
        setSize(screenwidth, screenheight);
        this.setLocationRelativeTo(null);
        SimpleDateFormat formater = new SimpleDateFormat("dd-MM-yy  HH:mm:ss     dd-MM-yy   ");
        Date date = new Date();
        
        String dates = formater.format(date);
        
        setIcon();
        jLabelTime.setText(dates);
        
        //Styling the table
        jTableItems.setShowGrid(true);
        jTableItems.setGridColor(Color.black);
        
        JTableHeader th =jTableItems.getTableHeader();
        th.setBackground(Color.green);
        th.setFont(new Font("Tahoma",Font.BOLD, 12));
        th.setForeground(Color.blue);
        
        populateJtableInventory();
        
        // The users Table
        populateJtableUsers();
        jTableUsers.setShowGrid(true);
        jTableUsers.setGridColor(Color.black);
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollBar1 = new javax.swing.JScrollBar();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        jPanel3 = new javax.swing.JPanel();
        jLabelControlPanel = new javax.swing.JLabel();
        jButtonReports = new javax.swing.JButton();
        jButtonInventory = new javax.swing.JButton();
        jButtonItem = new javax.swing.JButton();
        jButtonUser = new javax.swing.JButton();
        jButtonAdmin = new javax.swing.JButton();
        jButtonSupplier = new javax.swing.JButton();
        jButtonGetAsAdmin = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButtonLogout = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabelAdmin = new javax.swing.JLabel();
        jLabelUsername = new javax.swing.JLabel();
        jLabelTime = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableItems = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableUsers = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jButtonRefresh = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableInventory = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1300, 770));
        setPreferredSize(new java.awt.Dimension(1300, 770));

        jPanel1.setMinimumSize(new java.awt.Dimension(700, 600));
        jPanel1.setLayout(null);

        jPanel3.setBackground(new java.awt.Color(204, 24, 9));

        jLabelControlPanel.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabelControlPanel.setForeground(new java.awt.Color(0, 102, 255));
        jLabelControlPanel.setText("Control Panel");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jLabelControlPanel)
                    .addGap(0, 73, Short.MAX_VALUE)))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 72, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jLabelControlPanel)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        jButtonReports.setBackground(new java.awt.Color(51, 255, 255));
        jButtonReports.setText("View Reports");

        jButtonInventory.setBackground(new java.awt.Color(51, 255, 255));
        jButtonInventory.setText("Update Inventory");
        jButtonInventory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInventoryActionPerformed(evt);
            }
        });

        jButtonItem.setBackground(new java.awt.Color(0, 153, 153));
        jButtonItem.setText("Add A New Item");
        jButtonItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonItemActionPerformed(evt);
            }
        });

        jButtonUser.setBackground(new java.awt.Color(0, 153, 153));
        jButtonUser.setText("Add A User");
        jButtonUser.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonUserMouseClicked(evt);
            }
        });

        jButtonAdmin.setBackground(new java.awt.Color(0, 153, 153));
        jButtonAdmin.setText("Administator");
        jButtonAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAdminActionPerformed(evt);
            }
        });

        jButtonSupplier.setBackground(new java.awt.Color(0, 153, 153));
        jButtonSupplier.setText("Supplier Contacts");
        jButtonSupplier.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonSupplierMouseClicked(evt);
            }
        });
        jButtonSupplier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSupplierActionPerformed(evt);
            }
        });

        jButtonGetAsAdmin.setBackground(new java.awt.Color(255, 255, 102));
        jButtonGetAsAdmin.setText("Go To User");
        jButtonGetAsAdmin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonGetAsAdminMouseClicked(evt);
            }
        });
        jButtonGetAsAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGetAsAdminActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(166, 7, 15));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton1.setText("Exit");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButtonLogout.setBackground(new java.awt.Color(255, 255, 102));
        jButtonLogout.setText("Logout");
        jButtonLogout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonLogoutMouseClicked(evt);
            }
        });
        jButtonLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLogoutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jButtonSupplier, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonAdmin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonUser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonItem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonReports, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButtonInventory, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonGetAsAdmin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonLogout, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(35, Short.MAX_VALUE))
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonReports, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jButtonInventory, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(jButtonItem, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(jButtonUser, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(jButtonAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(jButtonSupplier, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jButtonGetAsAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(jButtonLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(75, 75, 75)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(165, Short.MAX_VALUE))
        );
        jDesktopPane1.setLayer(jPanel3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jButtonReports, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jButtonInventory, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jButtonItem, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jButtonUser, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jButtonAdmin, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jButtonSupplier, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jButtonGetAsAdmin, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jButton1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jButtonLogout, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jPanel1.add(jDesktopPane1);
        jDesktopPane1.setBounds(0, 0, 199, 881);

        jPanel2.setBackground(new java.awt.Color(51, 185, 78));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 153));
        jLabel1.setText("View Your Reports And Inventory");

        jLabelAdmin.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabelAdmin.setText("Admin");

        jLabelUsername.setText("Adminname");

        jLabelTime.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabelTime.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jLabelAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 507, Short.MAX_VALUE)
                .addComponent(jLabelTime, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(260, 260, 260))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabelAdmin, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE)
                    .addComponent(jLabelTime, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addComponent(jLabelUsername, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel2);
        jPanel2.setBounds(205, 0, 1391, 74);

        jTableItems.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTableItems.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableItemsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableItems);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(210, 110, 750, 382);

        jPanel4.setBackground(new java.awt.Color(7, 121, 137));
        jPanel4.setOpaque(false);

        jLabel3.setBackground(new java.awt.Color(7, 121, 137));
        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(204, 204, 204));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Your Users");
        jLabel3.setOpaque(true);

        jTableUsers.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTableUsers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTableUsers.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableUsersMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTableUsers);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 750, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(0, 29, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );

        jPanel1.add(jPanel4);
        jPanel4.setBounds(210, 470, 750, 280);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("All Items Dealt With");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(400, 80, 165, 30);

        jButtonRefresh.setBackground(new java.awt.Color(28, 85, 227));
        jButtonRefresh.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jButtonRefresh.setText("Refresh");
        jButtonRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRefreshActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonRefresh);
        jButtonRefresh.setBounds(210, 80, 108, 28);

        jTableInventory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane3.setViewportView(jTableInventory);

        jPanel1.add(jScrollPane3);
        jScrollPane3.setBounds(990, 140, 340, 560);

        jLabel4.setBackground(new java.awt.Color(7, 121, 137));
        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(204, 204, 0));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Inventory");
        jLabel4.setOpaque(true);
        jPanel1.add(jLabel4);
        jLabel4.setBounds(990, 110, 340, 30);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1435, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 807, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    // populating the table
    public final void populateJtable()
    {
        // getting the number of rows
        Connection conn = DatabaseConnection.getConnection();
        Statement statement;
        ResultSet rset;
        
        try {
            statement = conn.createStatement();
            
            rset = statement.executeQuery("SELECT COUNT(*) FROM users");
            
            
            
            // inserting the items to the table
        ItemQuery iq= new ItemQuery();
        ArrayList<Items> itList = iq.itemList();
        
        String[] colNames = {"","Item Name",  "Item Number", "Price per Item", "Item Quantity", "Added By" , "Item Supplier", "Item Picture", "Item Model"};
        Object [][] rows = new Object [itList.size()][9];
        int j = 1;
        while(rset.next())
        {
            for(int i = 0; i<itList.size(); i++)
            {
                rows[i][0] = j;
                rows[i][1] = itList.get(i).getItemName();
                rows[i][2] = itList.get(i).getItemNumber();
                rows[i][3] = itList.get(i).getItemPrice();
                rows[i][4] = itList.get(i).getItemQuantity();
                rows[i][5] = itList.get(i).getAdminName();
                rows[i][6] = itList.get(i).getItemSupplier();
                ImageIcon img = new ImageIcon(new ImageIcon
                                                (itList.get(i).getItempic())
                                                    .getImage().getScaledInstance(40, 40, Image.SCALE_SMOOTH));

                rows[i][7] = img;
                rows[i][8] = itList.get(i).getItemModel();

                MyDisplayModel model = new MyDisplayModel( rows, colNames);
                jTableItems.setModel(model);
                jTableItems.setRowHeight(50);
                
                // centering the elements in the table
                DefaultTableCellRenderer center = new DefaultTableCellRenderer();
                center.setHorizontalAlignment(JLabel.CENTER);
                jTableItems.setDefaultRenderer(String.class, center);
                
                
                j++;

             }
        }
        } catch (SQLException ex) {
            Logger.getLogger(ItemQuery.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        finally
        {
            try {
                conn.close();
            } catch (SQLException ex) {
                Logger.getLogger(AdminSystem.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
    }
    private void jButtonItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonItemActionPerformed
        heightech.AddItem itemadd = new heightech.AddItem();
        itemadd.setVisible(true);
        itemadd.setResizable(false);
        itemadd.pack();
        itemadd.setSize(1090, 600);
        itemadd.setLocationRelativeTo(null);
        itemadd.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        //itemadd.setAlwaysOnTop(true);
        //itemadd.isAlwaysOnTopSupported();
    }//GEN-LAST:event_jButtonItemActionPerformed

    private void jButtonUserMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonUserMouseClicked
            AddUser useradd = new AddUser();
            useradd.setVisible(true);
            useradd.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
            useradd.setResizable(false);
            useradd.pack();
            useradd.setLocationRelativeTo(null);
            useradd.setSize(500,600);
            //useradd.setAlwaysOnTop(true);
    }//GEN-LAST:event_jButtonUserMouseClicked

    private void jButtonSupplierMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonSupplierMouseClicked
            Suppliers supply = new Suppliers();
            supply.setVisible(true);
            supply.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
            supply.setResizable(false);
            supply.pack();
            supply.setLocationRelativeTo(null);
            supply.setSize(980, 650);
            //supply.setAlwaysOnTop(true);
    }//GEN-LAST:event_jButtonSupplierMouseClicked

    private void jButtonSupplierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSupplierActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonSupplierActionPerformed

    private void jButtonGetAsAdminMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonGetAsAdminMouseClicked
            Users.UserSystem users = new Users.UserSystem();
            users.setVisible(true);
            users.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
            //users.setResizable(false);
            users.pack();
            users.setLocationRelativeTo(null);
           Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        
        int height = screenSize.height;
        int width = screenSize.width;
        
        setSize(screenSize.width, screenSize.height); 
            users.setSize(width, height);
            //users.isAlwaysOnTop();
    }//GEN-LAST:event_jButtonGetAsAdminMouseClicked

    private void jTableItemsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableItemsMouseClicked
            //Display the items table elements in the table
        
            //get the selected row index
             int rowIndex = jTableItems.getSelectedRow();
             AddItem editItem = new AddItem();
             editItem.setVisible(true);
             editItem.setResizable(false);
             editItem.pack();
             editItem.setSize(1090, 600);
             editItem.setLocationRelativeTo(null);
             editItem.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
             //editItem.setAlwaysOnTop(true);
           
            
            editItem.getjTextFieldName().setText((String) jTableItems.getValueAt(rowIndex, 1));
            editItem.getjTextFieldNumber().setText((String) jTableItems.getValueAt(rowIndex, 2));
            editItem.getjSpinnerprice().setValue(jTableItems.getValueAt(rowIndex, 3));
            editItem.getjSpinner1().setValue(jTableItems.getValueAt(rowIndex, 4));
            editItem.getjTextFieldSupplier().setText((String) jTableItems.getValueAt(rowIndex, 6));
          
            // Image style
           // Image img = ((ImageIcon)jTable1.getValueAt(rowIndex, 7)).getImage().getScaledInstance(editItem.getjLabelPicture().getWidth(), editItem.getjLabelPicture().getHeight(), Image.SCALE_SMOOTH);
             
           // ImageIcon pic = new ImageIcon(img);
            
            //editItem.getjLabelPicture().setIcon(pic);
            editItem.getjTextFieldModel().setText((String) jTableItems.getValueAt(rowIndex, 8));
            editItem.getjTextFieldNumber().setEditable(false);
            
    }//GEN-LAST:event_jTableItemsMouseClicked

    private void jTableUsersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableUsersMouseClicked
           int rowIndex = jTableUsers.getSelectedRow();
        
            Connection conn = DatabaseConnection.getConnection();
            PreparedStatement ps;
            ResultSet rs;
            
        try {
            ps = conn.prepareStatement("SELECT * FROM users WHERE user_uid = ?");
            ps.setString(1, jTableUsers.getValueAt(rowIndex, 4).toString());
            
            rs = ps.executeQuery();
            
            AddUser useradd = new AddUser();
            useradd.setVisible(true);
            useradd.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
            useradd.setResizable(false);
            useradd.pack();
            useradd.setLocationRelativeTo(null);
            useradd.setSize(500,600);
            //useradd.setAlwaysOnTop(true);
            
            useradd.getjTextFieldFirst().setText((String) jTableUsers.getValueAt(rowIndex, 1));
            useradd.getjTextFieldLast().setText((String) jTableUsers.getValueAt(rowIndex, 2));
            useradd.getjTextFieldPhone().setText((String) jTableUsers.getValueAt(rowIndex, 3));
            useradd.getjTextFieldUsername().setText((String) jTableUsers.getValueAt(rowIndex, 4));
            useradd.getjTextFieldEmail().setText((String) jTableUsers.getValueAt(rowIndex, 5));
            useradd.getjTextFieldID().setText(jTableUsers.getValueAt(rowIndex, 6).toString());
            useradd.getjTextFieldUsername().setEditable(false);
            useradd.getjPasswordField1().setEditable(false);
            
            
        } catch (SQLException ex) {
            Logger.getLogger(AdminSystem.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        finally
        {
               try {
                   conn.close();
               } catch (SQLException ex) {
                   Logger.getLogger(AdminSystem.class.getName()).log(Level.SEVERE, null, ex);
               }
        }
             
    }//GEN-LAST:event_jTableUsersMouseClicked

    private void jButtonRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRefreshActionPerformed
        refreshJTable();
    }//GEN-LAST:event_jButtonRefreshActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       int x = JOptionPane.showConfirmDialog(null, "Sure To Exit?", "Iris Vision Dynamics", YES_NO_CANCEL_OPTION, WARNING_MESSAGE);
       if(x==0)
       {
           System.exit(0);
       }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButtonLogoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonLogoutMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonLogoutMouseClicked

    private void jButtonLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLogoutActionPerformed
        Launcher launch = new Launcher();
        launch.setVisible(true);
        launch.setDefaultCloseOperation(EXIT_ON_CLOSE);
        launch.setLocationRelativeTo(null);
        launch.pack();
        this.dispose();
    }//GEN-LAST:event_jButtonLogoutActionPerformed

    private void jButtonInventoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInventoryActionPerformed
       UpdateInventory update = new UpdateInventory();
       update.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
       update.setResizable(false);
       update.setLocationRelativeTo(null);
       update.setVisible(true);
       update.pack();
    }//GEN-LAST:event_jButtonInventoryActionPerformed

    private void jButtonAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAdminActionPerformed
       NewAdmin admin = new NewAdmin(new javax.swing.JFrame(), true);
       admin.setVisible(true);
       admin.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
       admin.setLocationRelativeTo(null);
       
    }//GEN-LAST:event_jButtonAdminActionPerformed

    private void jButtonGetAsAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGetAsAdminActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonGetAsAdminActionPerformed

  
    
    public void refreshJTable()
    {
        jTableItems.setModel(new DefaultTableModel());
        populateJtable();
        populateJtableUsers();
        populateJtableInventory();
    
    }
    
    
    
    /** this function populates the users table*/
     public final void populateJtableUsers()
    {
        Connection conn = DatabaseConnection.getConnection();
        Statement statement;
        ResultSet rset;
        
        try {
            statement = conn.createStatement();
            rset = statement.executeQuery("SELECT COUNT(*) FROM users");
            
            UserQuery uq = new UserQuery();
            
            ArrayList<UserSetters> sList = uq.usersList();
            
            String[] colNames = {"", "First Name", "Second Name", "Phone Number", "Username", "Email", "ID Number"};
            Object[][] rows = new Object[sList.size()][7];
            
            int j = 1;
            
            while(rset.next())
            {
                for(int i = 0; i<sList.size(); i++)
                {
                   rows[i][0] = j;
                  rows[i][1] = sList.get(i).getfName();
                  rows[i][2] = sList.get(i).getlName();
                  rows[i][3] = sList.get(i).getPhone();
                  rows[i][4] = sList.get(i).getUserName();
                  rows[i][5] = sList.get(i).getEmail();
                  rows[i][6] = sList.get(i).getIdNo();
                 
                  SupplierDisplayModel md = new SupplierDisplayModel(rows, colNames);
                  jTableUsers.setModel(md);
                  jTableUsers.setRowHeight(30);
                  
                  DefaultTableCellRenderer center = new DefaultTableCellRenderer();
                center.setHorizontalAlignment(JLabel.CENTER);
                jTableUsers.setDefaultRenderer(String.class, center);
                
                  JTableHeader th =jTableUsers.getTableHeader();
                  th.setBackground(Color.green);
                  th.setFont(new Font("Tahoma",Font.BOLD, 12));
                     th.setForeground(Color.blue);
                    j++;
                }
                
               
            }
        } catch (SQLException ex) {
            Logger.getLogger(Suppliers.class.getName()).log(Level.SEVERE, null, ex);
        }
    
        finally
        {
            try {
                conn.close();
            } catch (SQLException ex) {
                Logger.getLogger(AdminSystem.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
    }
     
     
     
     /** This method populates the inventory table */
     public final void populateJtableInventory()
    {
        Connection conn = DatabaseConnection.getConnection();
        Statement statement;
        ResultSet rset;
        
        try {
            statement = conn.createStatement();
            rset = statement.executeQuery("SELECT COUNT(*) FROM inventory");
            
            InventoryQuery uq = new InventoryQuery();
            
            ArrayList<Inventory> sList = uq.itemList();
            
            String[] colNames = {"", "Item Name", "Item Number", "Quantity", "Total Price"};
            Object[][] rows = new Object[sList.size()][7];
            
            int j = 1;
            
            while(rset.next())
            {
                for(int i = 0; i<sList.size(); i++)
                {
                   rows[i][0] = j;
                  rows[i][1] = sList.get(i).getItem_name();
                  rows[i][2] = sList.get(i).getItem_number();
                  rows[i][3] = sList.get(i).getItem_Quantity();
                  rows[i][4] = sList.get(i).getItem_Quantity()*sList.get(i).getPrice();
                  SupplierDisplayModel md = new SupplierDisplayModel(rows, colNames);
                  jTableInventory.setModel(md);
                  jTableInventory.setRowHeight(28);
                  
                  DefaultTableCellRenderer center = new DefaultTableCellRenderer();
                center.setHorizontalAlignment(JLabel.CENTER);
                jTableInventory.setDefaultRenderer(String.class, center);
                
                  JTableHeader th =jTableInventory.getTableHeader();
                  th.setBackground(Color.green);
                  th.setFont(new Font("Tahoma",Font.BOLD, 12));
                     th.setForeground(Color.blue);
                    j++;
                }
                
               
            }
        } catch (SQLException ex) {
            Logger.getLogger(Suppliers.class.getName()).log(Level.SEVERE, null, ex);
        }
    
        finally
        {
            try {
                conn.close();
            } catch (SQLException ex) {
                Logger.getLogger(AdminSystem.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
    }
     private void setIcon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("MainLogo.png")));
    }
     
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminSystem().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonAdmin;
    private javax.swing.JButton jButtonGetAsAdmin;
    private javax.swing.JButton jButtonInventory;
    private javax.swing.JButton jButtonItem;
    private javax.swing.JButton jButtonLogout;
    private javax.swing.JButton jButtonRefresh;
    private javax.swing.JButton jButtonReports;
    private javax.swing.JButton jButtonSupplier;
    private javax.swing.JButton jButtonUser;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabelAdmin;
    private javax.swing.JLabel jLabelControlPanel;
    private javax.swing.JLabel jLabelTime;
    public javax.swing.JLabel jLabelUsername;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollBar jScrollBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTableInventory;
    private javax.swing.JTable jTableItems;
    private javax.swing.JTable jTableUsers;
    // End of variables declaration//GEN-END:variables
}
