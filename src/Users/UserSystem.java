/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Users;

//import Icons.MainLogo.ico;
import static Users.UpdateInventory.getitemQuantity;
import Administrators.AdminLogin;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.text.SimpleDateFormat;
import java.util.Date;
import Databases.DatabaseConnection;
import heightech.ItemQuery;
import heightech.Items;
import heightech.LoginForm;
import heightech.MyDisplayModel;
import java.awt.Font;
import java.awt.event.KeyEvent;
import java.io.File;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.concurrent.ThreadLocalRandom;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JComboBox;
import static javax.swing.JFrame.EXIT_ON_CLOSE;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.table.JTableHeader;
import javax.swing.JLabel;
import static javax.swing.JOptionPane.ERROR_MESSAGE;
import static javax.swing.JOptionPane.INFORMATION_MESSAGE;
import static javax.swing.JOptionPane.QUESTION_MESSAGE;
import static javax.swing.JOptionPane.WARNING_MESSAGE;
import javax.swing.JTable;
import javax.swing.JTextField;
/**        super("HEIGHTECH ELECTRONICS");

 *
 * @author User
 */
public final class UserSystem extends javax.swing.JFrame {

    /**
     * Creates new form UserSystem
     */
    double num, ans;
    int calculation;
    private double totalPrice = 0;
    private String selectedItem;
    String itemSelected;
    private int customerMoney = 0;
     AddItem addItem = new AddItem();
    int price = 0;
    int total = 0;
    /** This quantity carry 's temporarily the quantity;*/
    int quantityItem=0;
    /**Calling the function for total price for it to be used in another class*/
    public double getTotalPrice() {
        return totalPrice;
    }

    public void setTotalPrice(double totalPrice) {
        this.totalPrice = totalPrice;
    }
    
     /*calling the function that check the quantity in the database*/
      Quantity quantityCheck = new Quantity();
    
    /**Constructor*/
    public UserSystem() {
        super("Iris Vision Dynamics");
        modifyColors();
        initComponents();
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        
        int height = screenSize.height-5;
        int width = screenSize.width;
        
        setSize(width, height);
        
        SimpleDateFormat formater = new SimpleDateFormat("dd-MM-yy  HH:mm:ss ");
        Date date = new Date();
        
        String dates = formater.format(date);
        displayItems();
        /**Displaying the total value to the jLabel in the blue panel
        */
        
       jTableItems.setRowHeight(25);
         jTableItems.setShowGrid(true);
        jTableItems.setGridColor(Color.black);
        JTableHeader th =jTableItems.getTableHeader();
        th.setBackground(Color.green);
        th.setFont(new Font("Tahoma",Font.BOLD, 12));
        th.setForeground(Color.blue);
        
        // calling the function for displaying the item's numbers into the systems
      jLabelTotalPrice.setText("000"); 
      
      //setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("C:\\Users\\User\\Documents\\NetBeansProjects\\Heightech\\src\\Icons\\"
       //       + "MainLogo.ico")));
//      try{    
//       setIconImage(ImageIO.read(new File(".\\Icons\\MainLogo.png")));   
//         }
//        catch (Exception ex){
//       //do something
//        }
      
      setIcon();
    }

    
     
    /** This is for modifying the colors of the internal frame*/
   protected void modifyColors() {
      try {
         String name = UIManager.getSystemLookAndFeelClassName();
         UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
         UIManager.put("InternalFrame.activeTitleBackground", Color.blue);
         UIManager.put("InternalFrame.activeTitleForeground", Color.black);
         UIManager.put("InternalFrame.inactiveTitleBackground", Color.black);
         UIManager.put("InternalFrame.inactiveTitleForeground", Color.gray);
      }
      catch(ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException e) {
      }
   }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jButtonSaleTable = new javax.swing.JButton();
        jButtonAll = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButtonRefresh = new javax.swing.JButton();
        jButtonExit = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabelAdmin = new javax.swing.JLabel();
        jLabelUsername = new javax.swing.JLabel();
        jLabelTime = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jInternalFrame1 = new javax.swing.JInternalFrame();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        jButtonReset = new javax.swing.JButton();
        jButtonNo9 = new javax.swing.JButton();
        jButtonNo6 = new javax.swing.JButton();
        jButtonNo3 = new javax.swing.JButton();
        jButtonNo00 = new javax.swing.JButton();
        jButtonMultiply = new javax.swing.JButton();
        jButtonEsc = new javax.swing.JButton();
        jButtonNo7 = new javax.swing.JButton();
        jButtonNo4 = new javax.swing.JButton();
        jButtonNo1 = new javax.swing.JButton();
        jButtonEquals = new javax.swing.JButton();
        jButtonSub = new javax.swing.JButton();
        jButtonNo8 = new javax.swing.JButton();
        jButtonNo5 = new javax.swing.JButton();
        jButtonNo2 = new javax.swing.JButton();
        jButtonNo0 = new javax.swing.JButton();
        jButtondid = new javax.swing.JButton();
        jButtonAdd = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jTextFieldInputs = new javax.swing.JTextField();
        jTextFieldResult = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableItems = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabelTotalPrice = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jComboBoxSearch = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1300, 770));
        setPreferredSize(new java.awt.Dimension(1300, 770));

        jButtonSaleTable.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButtonSaleTable.setText("Sales");
        jButtonSaleTable.setEnabled(false);
        jButtonSaleTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaleTableActionPerformed(evt);
            }
        });

        jButtonAll.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButtonAll.setText("Items");
        jButtonAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAllActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton3.setText("Logout");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton4.setText("Finish(F2)");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("jButton5");

        jButtonRefresh.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButtonRefresh.setText("Refresh(F5)");
        jButtonRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRefreshActionPerformed(evt);
            }
        });

        jButtonExit.setBackground(new java.awt.Color(251, 23, 10));
        jButtonExit.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButtonExit.setText("Exit");
        jButtonExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButtonSaleTable)
                .addGap(31, 31, 31)
                .addComponent(jButtonAll)
                .addGap(36, 36, 36)
                .addComponent(jButton3)
                .addGap(40, 40, 40)
                .addComponent(jButton4)
                .addGap(34, 34, 34)
                .addComponent(jButton5)
                .addGap(42, 42, 42)
                .addComponent(jButtonRefresh)
                .addGap(38, 38, 38)
                .addComponent(jButtonExit)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonSaleTable)
                    .addComponent(jButtonAll)
                    .addComponent(jButton3)
                    .addComponent(jButton4)
                    .addComponent(jButton5)
                    .addComponent(jButtonRefresh)
                    .addComponent(jButtonExit))
                .addContainerGap())
        );

        jSeparator1.setForeground(new java.awt.Color(0, 0, 0));

        jPanel4.setBackground(new java.awt.Color(51, 185, 78));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 153));
        jLabel1.setText("Your Once Stop Electronics Store");

        jLabelAdmin.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabelAdmin.setText("USER:");

        jLabelUsername.setText("Username");

        jLabelTime.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabelTime.setForeground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 153));
        jLabel2.setText("HEIGHTECH POWER ELECTRONICS");

        jInternalFrame1.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        jInternalFrame1.setTitle("Calculator"); // NOI18N
        jInternalFrame1.setMaximumSize(new java.awt.Dimension(64, 34));
        jInternalFrame1.setOpaque(true);
        jInternalFrame1.setVisible(true);

        jButtonReset.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButtonReset.setText("Delete");
        jButtonReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonResetActionPerformed(evt);
            }
        });
        jLayeredPane1.add(jButtonReset);
        jButtonReset.setBounds(10, 10, 70, 23);

        jButtonNo9.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButtonNo9.setText("9");
        jButtonNo9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNo9ActionPerformed(evt);
            }
        });
        jLayeredPane1.add(jButtonNo9);
        jButtonNo9.setBounds(140, 40, 50, 23);

        jButtonNo6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButtonNo6.setText("6");
        jButtonNo6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNo6ActionPerformed(evt);
            }
        });
        jLayeredPane1.add(jButtonNo6);
        jButtonNo6.setBounds(140, 80, 50, 23);

        jButtonNo3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButtonNo3.setText("3");
        jButtonNo3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNo3ActionPerformed(evt);
            }
        });
        jLayeredPane1.add(jButtonNo3);
        jButtonNo3.setBounds(140, 120, 50, 23);

        jButtonNo00.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButtonNo00.setText("00");
        jButtonNo00.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNo00ActionPerformed(evt);
            }
        });
        jLayeredPane1.add(jButtonNo00);
        jButtonNo00.setBounds(70, 160, 50, 23);

        jButtonMultiply.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButtonMultiply.setText("*");
        jButtonMultiply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMultiplyActionPerformed(evt);
            }
        });
        jLayeredPane1.add(jButtonMultiply);
        jButtonMultiply.setBounds(220, 120, 60, 23);

        jButtonEsc.setBackground(new java.awt.Color(234, 15, 16));
        jButtonEsc.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButtonEsc.setText("Esc");
        jButtonEsc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEscActionPerformed(evt);
            }
        });
        jLayeredPane1.add(jButtonEsc);
        jButtonEsc.setBounds(229, 10, 50, 23);

        jButtonNo7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButtonNo7.setText("7");
        jButtonNo7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNo7ActionPerformed(evt);
            }
        });
        jLayeredPane1.add(jButtonNo7);
        jButtonNo7.setBounds(10, 40, 40, 23);

        jButtonNo4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButtonNo4.setText("4");
        jButtonNo4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNo4ActionPerformed(evt);
            }
        });
        jLayeredPane1.add(jButtonNo4);
        jButtonNo4.setBounds(10, 80, 40, 23);

        jButtonNo1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButtonNo1.setText("1");
        jButtonNo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNo1ActionPerformed(evt);
            }
        });
        jLayeredPane1.add(jButtonNo1);
        jButtonNo1.setBounds(10, 120, 40, 23);

        jButtonEquals.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButtonEquals.setText("=");
        jButtonEquals.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEqualsActionPerformed(evt);
            }
        });
        jLayeredPane1.add(jButtonEquals);
        jButtonEquals.setBounds(140, 200, 140, 30);

        jButtonSub.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButtonSub.setText("-");
        jButtonSub.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSubActionPerformed(evt);
            }
        });
        jLayeredPane1.add(jButtonSub);
        jButtonSub.setBounds(140, 160, 60, 20);

        jButtonNo8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButtonNo8.setText("8");
        jButtonNo8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNo8ActionPerformed(evt);
            }
        });
        jLayeredPane1.add(jButtonNo8);
        jButtonNo8.setBounds(70, 40, 50, 23);

        jButtonNo5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButtonNo5.setText("5");
        jButtonNo5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNo5ActionPerformed(evt);
            }
        });
        jLayeredPane1.add(jButtonNo5);
        jButtonNo5.setBounds(70, 80, 50, 23);

        jButtonNo2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButtonNo2.setText("2");
        jButtonNo2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNo2ActionPerformed(evt);
            }
        });
        jLayeredPane1.add(jButtonNo2);
        jButtonNo2.setBounds(70, 120, 50, 23);

        jButtonNo0.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButtonNo0.setText("0");
        jButtonNo0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNo0ActionPerformed(evt);
            }
        });
        jLayeredPane1.add(jButtonNo0);
        jButtonNo0.setBounds(10, 160, 41, 23);

        jButtondid.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButtondid.setText("/");
        jButtondid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtondidActionPerformed(evt);
            }
        });
        jLayeredPane1.add(jButtondid);
        jButtondid.setBounds(220, 160, 60, 23);

        jButtonAdd.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButtonAdd.setText("+");
        jButtonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddActionPerformed(evt);
            }
        });
        jLayeredPane1.add(jButtonAdd);
        jButtonAdd.setBounds(220, 40, 60, 70);

        jButton8.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jButton8.setText(".");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        jLayeredPane1.add(jButton8);
        jButton8.setBounds(10, 200, 40, 30);

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTextFieldInputs.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextFieldInputs.setBorder(null);
        jPanel3.add(jTextFieldInputs, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, 270, 35));

        jTextFieldResult.setEditable(false);
        jTextFieldResult.setBackground(new java.awt.Color(255, 255, 255));
        jTextFieldResult.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jTextFieldResult.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        jTextFieldResult.setBorder(null);
        jTextFieldResult.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldResultActionPerformed(evt);
            }
        });
        jPanel3.add(jTextFieldResult, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 49, 270, 40));

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 303, Short.MAX_VALUE)
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jInternalFrame1Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 654, Short.MAX_VALUE))
        );

        jTableItems.setBackground(new java.awt.Color(230, 251, 238));
        jTableItems.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTableItems.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"", null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Number", "Description", "Price Per Item", "Quantity", "Total Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableItems.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        jTableItems.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        jTableItems.setFillsViewportHeight(true);
        jTableItems.setName(""); // NOI18N
        jTableItems.setSelectionBackground(new java.awt.Color(204, 204, 255));
        jTableItems.setSelectionForeground(new java.awt.Color(0, 0, 0));
        jTableItems.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTableItems.setSurrendersFocusOnKeystroke(true);
        jTableItems.getTableHeader().setReorderingAllowed(false);
        jTableItems.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTableItemsKeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(jTableItems);
        if (jTableItems.getColumnModel().getColumnCount() > 0) {
            jTableItems.getColumnModel().getColumn(0).setResizable(false);
            jTableItems.getColumnModel().getColumn(1).setResizable(false);
            jTableItems.getColumnModel().getColumn(2).setResizable(false);
            jTableItems.getColumnModel().getColumn(3).setResizable(false);
            jTableItems.getColumnModel().getColumn(4).setResizable(false);
        }

        jPanel6.setBackground(new java.awt.Color(0, 51, 153));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 213, 65));
        jLabel3.setText("TOTAL PRICE:");

        jLabelTotalPrice.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabelTotalPrice.setForeground(new java.awt.Color(255, 255, 255));
        jLabelTotalPrice.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelTotalPrice.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setFont(new java.awt.Font("Tahoma", 3, 36)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(204, 204, 0));
        jLabel5.setText("ksh:");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(104, 104, 104)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(67, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabelTotalPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(jLabelTotalPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(46, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(55, 55, 55))))
        );

        jComboBoxSearch.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jComboBoxSearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jComboBoxSearchMouseClicked(evt);
            }
        });
        jComboBoxSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxSearchActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("SEARCH:");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 973, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jInternalFrame1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jInternalFrame1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 540, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jComboBoxSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jInternalFrame1.getAccessibleContext().setAccessibleDescription("Calculate some of the values");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(41, 41, 41)
                .addComponent(jLabelTime, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 12, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelTime, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabelAdmin, javax.swing.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE)
                                .addComponent(jLabelUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 590, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 1079, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(57, 57, 57))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /** This is where the results is displayed*/
    private void jTextFieldResultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldResultActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldResultActionPerformed

    private void jButtonNo8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNo8ActionPerformed
        jTextFieldInputs.setText(jTextFieldInputs.getText() + "8");
    }//GEN-LAST:event_jButtonNo8ActionPerformed

    /**This resets the calculator screen*/
    private void jButtonEscActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEscActionPerformed
        jTextFieldInputs.setText("");
        jTextFieldResult.setText("");
    }//GEN-LAST:event_jButtonEscActionPerformed

/**this function is for deleting items from the calculator and reseting the items*/     
    private void jButtonResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonResetActionPerformed
        
        int length = jTextFieldInputs.getText().length();
         int number = jTextFieldInputs.getText().length()-1;
         String store;
         
         if(length>0)
         {
         StringBuilder back = new StringBuilder(jTextFieldInputs.getText());
         back.deleteCharAt(number);
         store = back.toString();
         jTextFieldInputs.setText(store);
         }
         
    }//GEN-LAST:event_jButtonResetActionPerformed

    /**calculator*/
    private void jButtonNo7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNo7ActionPerformed
        jTextFieldInputs.setText(jTextFieldInputs.getText() + "7");
    }//GEN-LAST:event_jButtonNo7ActionPerformed

    /**calculator*/
    private void jButtonNo9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNo9ActionPerformed
         jTextFieldInputs.setText(jTextFieldInputs.getText() + "9");
    }//GEN-LAST:event_jButtonNo9ActionPerformed

    /**calculator*/
    private void jButtonNo4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNo4ActionPerformed
         jTextFieldInputs.setText(jTextFieldInputs.getText() + "4");
    }//GEN-LAST:event_jButtonNo4ActionPerformed

    /**calculator*/
    private void jButtonNo5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNo5ActionPerformed
         jTextFieldInputs.setText(jTextFieldInputs.getText() + "5");
    }//GEN-LAST:event_jButtonNo5ActionPerformed

    private void jButtonNo6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNo6ActionPerformed
        jTextFieldInputs.setText(jTextFieldInputs.getText() + "6");
    }//GEN-LAST:event_jButtonNo6ActionPerformed

    /**calculator*/
    private void jButtonNo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNo1ActionPerformed
         jTextFieldInputs.setText(jTextFieldInputs.getText() + "1");
    }//GEN-LAST:event_jButtonNo1ActionPerformed

    /**calculator*/
    private void jButtonNo2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNo2ActionPerformed
         jTextFieldInputs.setText(jTextFieldInputs.getText() + "2");
    }//GEN-LAST:event_jButtonNo2ActionPerformed

    /**calculator*/
    private void jButtonNo3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNo3ActionPerformed
         jTextFieldInputs.setText(jTextFieldInputs.getText() + "3");
    }//GEN-LAST:event_jButtonNo3ActionPerformed

    /**calculator*/
    private void jButtonNo00ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNo00ActionPerformed
         jTextFieldInputs.setText(jTextFieldInputs.getText() + "00");
    }//GEN-LAST:event_jButtonNo00ActionPerformed

    /**calculator*/
    private void jButtonNo0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNo0ActionPerformed
         jTextFieldInputs.setText(jTextFieldInputs.getText() + "0");
    }//GEN-LAST:event_jButtonNo0ActionPerformed

    /**calculator*/
    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        jTextFieldInputs.setText(jTextFieldInputs.getText() + ".");
    }//GEN-LAST:event_jButton8ActionPerformed

    
    /**calculator*/
    private void jButtonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddActionPerformed
        num = Double.parseDouble(jTextFieldInputs.getText());
        calculation = 1;
        jTextFieldInputs.setText("");
        jTextFieldResult.setText(num + " + ");
    }//GEN-LAST:event_jButtonAddActionPerformed

    /**calculator*/
    private void jButtonEqualsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEqualsActionPerformed
        Arithmetic_operation();
        jTextFieldInputs.setText("");
    }//GEN-LAST:event_jButtonEqualsActionPerformed

    
    /**calculator*/
    private void jButtonSubActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSubActionPerformed
         num = Double.parseDouble(jTextFieldInputs.getText());
        calculation = 2;
        jTextFieldInputs.setText("");
        jTextFieldResult.setText(num + " - ");
    }//GEN-LAST:event_jButtonSubActionPerformed

    
    /**calculator*/
    private void jButtonMultiplyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMultiplyActionPerformed
          num = Double.parseDouble(jTextFieldInputs.getText());
        calculation = 3;
        jTextFieldInputs.setText("");
        jTextFieldResult.setText(num + " * ");
    }//GEN-LAST:event_jButtonMultiplyActionPerformed

    
    /**calculator*/
    private void jButtondidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtondidActionPerformed
          num = Double.parseDouble(jTextFieldInputs.getText());
        calculation = 4;
        jTextFieldInputs.setText("");
        jTextFieldResult.setText(num + " / ");
    }//GEN-LAST:event_jButtondidActionPerformed

    
    /**calculator*/
    private void jButtonExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonExitActionPerformed
       int x = JOptionPane.showConfirmDialog(null, "Sure To Exit?");
       if(x==0)
       {
           System.exit(0);
       }
    }//GEN-LAST:event_jButtonExitActionPerformed
/**calculator*/
    private void jButtonRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRefreshActionPerformed
        refreshJtable();
    }//GEN-LAST:event_jButtonRefreshActionPerformed

    
    /** This button is displays all the items that are present alongside with their prices and quantities*/
    private void jButtonSaleTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaleTableActionPerformed

        jTableItems.setRowHeight(25);
        jTableItems.setShowGrid(true);
        jTableItems.setGridColor(Color.black);
        
        JTableHeader th =jTableItems.getTableHeader();
        th.setBackground(Color.green);
        th.setFont(new Font("Tahoma",Font.BOLD, 12));
        th.setForeground(Color.blue); 
        
    }//GEN-LAST:event_jButtonSaleTableActionPerformed

    /** This is the button for starting on the sales section*/
    private void jButtonAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAllActionPerformed
        
          ItemsAll items = new ItemsAll();
          items.setVisible(true);
          items.setSize(700, 500);
          items.pack();
          items.setLocationRelativeTo(null);
          items.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
//        String displayPrice = Double.toString(getTotalPrice());
//        jLabelTotalPrice.setText("Ksh: " + displayPrice);
       
    }//GEN-LAST:event_jButtonAllActionPerformed

    private void jComboBoxSearchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBoxSearchMouseClicked
                  
    }//GEN-LAST:event_jComboBoxSearchMouseClicked

    private void jComboBoxSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxSearchActionPerformed
         
    }//GEN-LAST:event_jComboBoxSearchActionPerformed

    
    /** This is where the keyboard listeners are and are also attached to some buttons in the menu on the bottom*/
    private void jTableItemsKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTableItemsKeyPressed
        int vk = evt.getKeyCode();
        int i=0;
        int j=jTableItems.getSelectedRow();
        String itemss = (String)getjTableItems().getValueAt(j, 0);
            if( vk == KeyEvent.VK_ENTER)
            {
             try{
              printEventInfo(j);
            try {
                
                try ( /** Updating the contents in the database of the items */ Connection conn2 = DatabaseConnection.getConnection()) {
                    PreparedStatement ps2;
                    //ResultSet rs2;
                    int newQuantity = quantityItem - 1;
                    ps2 = conn2.prepareStatement("UPDATE items SET Item_Quantity=? WHERE Item_number = ?");
                    ps2.setInt(1, newQuantity);
                    ps2.setString(2, itemss);
                    
                    ps2.executeUpdate();
                    ps2.close();
                    conn2.close();
                    
                    //Calling the function for updating the items in the table for the inventory
                    
                }
                
                // this is a much simpler and more effective way to update the inventory
               try(Connection conn = DatabaseConnection.getConnection())
               {
                   PreparedStatement ps2;
                     //ResultSet rs2;
                     int newQuantity = getitemQuantity(itemss)+ 1;
                     ps2 = conn.prepareStatement("UPDATE inventory SET item_Quantity =? WHERE item_number = ?");
                     ps2.setInt(1, newQuantity);
                     ps2.setString(2, itemss);
                     
                     try
                     {
                        if(ps2.executeUpdate() == 0)
                        { 
                            ps2 = conn.prepareStatement("INSERT INTO inventory(item_name, item_number, item_Quantity) VALUES (?,?,?)");
                             ps2.setString(1, (String)getjTableItems().getValueAt(j, 1));
                         ps2.setString(2, itemss);
                         ps2.setInt(3, 1);
                         ps2.executeUpdate();
                        }
                        

                        else
                        {
                            ps2.executeUpdate();
                        }
                     }
                     
                     catch(Exception e){}
                     //System.out.println("Go out");
                     conn.close();
               }
            } catch (SQLException ex) {
                Logger.getLogger(UserSystem.class.getName()).log(Level.SEVERE, null, ex);
            }
             
             }
             catch(Exception e)
            {
                    
                    }
            }
            
            
            else if(vk == KeyEvent.VK_F2)
            {
                getAmountChanged();
            }
            
            else if(vk == KeyEvent.VK_F5)
            {
                refreshJtable();
                
            }
       
    }//GEN-LAST:event_jTableItemsKeyPressed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
       LoginForm adminLog = new LoginForm();
        adminLog.setVisible(true);
        adminLog.setResizable(false);
        adminLog.pack();
        
        adminLog.setLocationRelativeTo(null);
        adminLog.setDefaultCloseOperation(EXIT_ON_CLOSE);
        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        getAmountChanged();
    }//GEN-LAST:event_jButton4ActionPerformed

/**This function prints the items to the user table in the sales panel
 * 
 * @param e= this is the key pressed that is returned
 * @param itemPlace = This represents the rows in the table in which the items are to be placed
 */
    private void printEventInfo( int itemPlace)
    {
//        int code = e.getKeyCode();
//
//        
//          jTableItems.setValueAt(KeyEvent.getKeyText(code),itemPlace, 1);
//            jTableItems.setValueAt(KeyEvent.getKeyText(code),itemPlace, 2);
//            jTableItems.setValueAt(KeyEvent.getKeyText(code),itemPlace, 3);
        String itemName= (String)getjTableItems().getValueAt(itemPlace, 0);
        Connection conn = DatabaseConnection.getConnection();
        PreparedStatement ps;
        ResultSet rs;
     try {
            
              ps = conn.prepareStatement("SELECT Item_name, Item_number, Item_description, "
                    + "Item_Quantity, item_price  FROM items WHERE Item_number = ?");
               
                
               if(addItem.itemList.contains(itemName)){
                 if(quantityCheck.Quantity(itemName)==true){
                   ps.setString(1, itemName);
                    
                     rs= ps.executeQuery();
                   
                    while(rs.next())
                         {
                            
                            jTableItems.setValueAt(rs.getString("item_number"), itemPlace, 0);
                            jTableItems.setValueAt(rs.getString("item_name"), itemPlace, 1);
                             jTableItems.setValueAt(rs.getString("item_price"), itemPlace, 2);
                           quantityItem = rs.getInt("Item_Quantity");
                            int x = 1;
    //                            if(user.isItemExist())
    //                            {
    //                                while(x<=itList.get(j).getItemQuantity())
    //                                {
    //                                    x++;
    //                                }
    //
    //                            }
    //                            else
    //                            {
    //                                x = 1;
    //                            }
                            total = rs.getInt("item_price")*x;
                            jTableItems.setValueAt(x, itemPlace, 3);
                            jTableItems.setValueAt(total, itemPlace, 4);
                        } 
                    
                    price = Integer.parseInt(jLabelTotalPrice.getText()) + total; 
                    jLabelTotalPrice.setText(Integer.toString(price));
                    //System.out.println(price); 
                    
                   
                    }
                 else
                 {
                     jTableItems.setValueAt("", itemPlace, 1);
                   JOptionPane.showMessageDialog(null, "error!!!", "ERROR", ERROR_MESSAGE);
                 }
               }
               else
               {
                   JOptionPane.showMessageDialog(null, "Item Does Not Exist", "WARNING", WARNING_MESSAGE);
                   
               }
               
        } 
        catch (SQLException ex) {
            Logger.getLogger(AddItem.class.getName()).log(Level.SEVERE, null, ex);
        }  
     
     
     /**Closing the database connection so that there can not exist multiple connections at a row*/
        finally
     {
         if(conn!=null)
         {
             try {
                 conn.close();
                 //totalPrice();
             } catch (SQLException ex) {
                 Logger.getLogger(UserSystem.class.getName()).log(Level.SEVERE, null, ex);
             }
         }
     }
    }
    
    
    public void Arithmetic_operation()
    {
        
       switch(calculation)
       {
           case 1:
               ans = num + Double.parseDouble(jTextFieldInputs.getText());
               jTextFieldResult.setText(Double.toString(ans));
               break;
             
            case 2:
               ans = num - Double.parseDouble(jTextFieldInputs.getText());
               jTextFieldResult.setText(Double.toString(ans));
               break;
                
                
             case 3:
               ans = num * Double.parseDouble(jTextFieldInputs.getText());
               jTextFieldResult.setText(Double.toString(ans));
               break;
                 
                
             case 4:
               ans = num / Double.parseDouble(jTextFieldInputs.getText());
               jTextFieldResult.setText(Double.toString(ans));
               break;
       }
     
        
    }
     // This will be used to get the item in the combobox or when using the qr code scanner
    
 
    public JComboBox getjComboBoxSearch() {
        return jComboBoxSearch;
    }

    public void setjComboBoxSearch(JComboBox jComboBoxSearch) {
        this.jComboBoxSearch = jComboBoxSearch;
    }
    
    
                

    public JTable getjTableItems() {
        return jTableItems;
    }

    public void setjTableItems(JTable jTableItems) {
        this.jTableItems = jTableItems;
    }
  
    
    /** This function helps to find the total of the items in the table */
   public void totalPrice()
   {
       int price = 0;
       for(int i = 0; i<jTableItems.getRowCount(); i++)
       {
           price = price + (Integer)jTableItems.getValueAt(i, 4);
           jLabelTotalPrice.setText("Ksh: "+Integer.toString(price));
       }
   }

    /**check if the items is already chosen in the table
     @return isItemExist()
     */
    
    public boolean isItemExist()
    {
        boolean isItemExist = false;
        
        ArrayList<String> items = new ArrayList<String>();
        for(int i=0; i<jTableItems.getRowCount(); i++)
        {
            items.add((String) jTableItems.getValueAt(i, 1));
            
            if(items.contains(selectedItem))
            {
                isItemExist = true;
            }
            
            else
            {
                isItemExist =false;
            }
        }
        
        return isItemExist;
    }
    
    
    /** Display the items in the ComboBox*/
    public void displayItems()
    {
        Connection conn = DatabaseConnection.getConnection();
        Statement st;
        ResultSet rs;
        
        try {
            st = conn.createStatement();
            rs = st.executeQuery("SELECT Item_number FROM items");
            
            while(rs.next())
            {
                jComboBoxSearch.addItem(rs.getString("Item_number"));
            }
        } catch (SQLException ex) {
            Logger.getLogger(UserSystem.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    
    /** This function gets the money from the customer and it will check if the money is enough and calculate the change automatically*/
    public void getAmountChanged()
    {
        if("000".equals(jLabelTotalPrice.getText()))
        {
            JOptionPane.showMessageDialog(null, "No Transaction", "ERROR!!!", ERROR_MESSAGE);
        }
        
        else{
        String money = JOptionPane.showInputDialog(null, "Enter The Client's Amount", "GET CASH", QUESTION_MESSAGE);
        
        
        customerMoney = Integer.parseInt(money);
        int change = customerMoney - Integer.parseInt(jLabelTotalPrice.getText());
        if(change < 0)
        {
            JOptionPane.showMessageDialog(null, "Insufficient Amount!!!", "ERROR", ERROR_MESSAGE);
        }
        
        else
        {
            
            String display = "Your Change:  " + Integer.toString(change);
            JOptionPane.showMessageDialog(null, display, "Transaction Completed #"+ random(), INFORMATION_MESSAGE);
             
       jLabelTotalPrice.setText("000");
       totalPrice = 0;
       customerMoney = 0;
       price = 0;
       total = 0; 
            /**Reseting the table model*/
       refreshJtable();
        }
      
        }
    }
    
    
    public void refreshJtable()
    {
       /**Reseting the table model*/
            jLabelTotalPrice.setText("000");
            jTableItems.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"", null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Number", "Description", "Price Per Item", "Quantity", "Total Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        
            
        
        
    }

    public int getQuantityItem() {
        return quantityItem;
    }

    public void setQuantityItem(int quantityItem) {
        this.quantityItem = quantityItem;
    }

    public JLabel getjLabelUsername() {
        return jLabelUsername;
    }

    public void setjLabelUsername(JLabel jLabelUsername) {
        this.jLabelUsername = jLabelUsername;
    }
    
    
    
    

    
    
    
    /** this function produces the transaction id*/
   public int random()
   {
       int x=ThreadLocalRandom.current().nextInt(0, 100000000);
       
       return x;
   }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserSystem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserSystem().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButtonAdd;
    private javax.swing.JButton jButtonAll;
    private javax.swing.JButton jButtonEquals;
    private javax.swing.JButton jButtonEsc;
    private javax.swing.JButton jButtonExit;
    private javax.swing.JButton jButtonMultiply;
    private javax.swing.JButton jButtonNo0;
    private javax.swing.JButton jButtonNo00;
    private javax.swing.JButton jButtonNo1;
    private javax.swing.JButton jButtonNo2;
    private javax.swing.JButton jButtonNo3;
    private javax.swing.JButton jButtonNo4;
    private javax.swing.JButton jButtonNo5;
    private javax.swing.JButton jButtonNo6;
    private javax.swing.JButton jButtonNo7;
    private javax.swing.JButton jButtonNo8;
    private javax.swing.JButton jButtonNo9;
    private javax.swing.JButton jButtonRefresh;
    private javax.swing.JButton jButtonReset;
    private javax.swing.JButton jButtonSaleTable;
    private javax.swing.JButton jButtonSub;
    private javax.swing.JButton jButtondid;
    private javax.swing.JComboBox jComboBoxSearch;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabelAdmin;
    private javax.swing.JLabel jLabelTime;
    private javax.swing.JLabel jLabelTotalPrice;
    public javax.swing.JLabel jLabelUsername;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTableItems;
    private javax.swing.JTextField jTextFieldInputs;
    private javax.swing.JTextField jTextFieldResult;
    // End of variables declaration//GEN-END:variables

    
    
    // these get the 
    public JTextField getjTextFieldResult() {
        return jTextFieldResult;
    }

    public void setjTextFieldResult(JTextField jTextFieldResult) {
        this.jTextFieldResult = jTextFieldResult;
    }

    
    /** This function sets the icon of the jframe in  the application*/
    private void setIcon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("MainLogo.png")));
    }
}
//7066821FC7CF150B78DD3A9E0FE1E46006E618BF63C35DFFB35F16A9E0EFC933519A462B10EAAAEB7D885F0204074B3E4679FC16C00105
