/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package heightech;

import Databases.DatabaseConnection;
import java.awt.Color;
import java.awt.Font;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;

/**
 *
 * @author User
 */
public class Suppliers extends javax.swing.JFrame {

    /**
     * Creates new form Suppliers
     */
    public Suppliers() {
        super("Iris Vision Dynamics");
        initComponents();
        setSize(980, 650);
        this.setLocationRelativeTo(null);
        populateJtable();
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        
         jTableContacts.setShowGrid(true);
        jTableContacts.setGridColor(Color.black);
        
        JTableHeader th =jTableContacts.getTableHeader();
        th.setBackground(Color.green);
        th.setFont(new Font("Tahoma",Font.BOLD, 12));
        th.setForeground(Color.blue);
        setIcon();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButtonRefresh = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabelName = new javax.swing.JLabel();
        jLabelEmail = new javax.swing.JLabel();
        jLabelPhone = new javax.swing.JLabel();
        jLabelAddress = new javax.swing.JLabel();
        jLabelItems = new javax.swing.JLabel();
        jTextFieldName = new javax.swing.JTextField();
        jTextFieldEmail = new javax.swing.JTextField();
        jTextFieldPhone = new javax.swing.JTextField();
        jTextFieldAddress = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaItems = new javax.swing.JTextArea();
        jButtonOk = new javax.swing.JButton();
        jButtonCancel = new javax.swing.JButton();
        jButtonEdit = new javax.swing.JButton();
        jButtonDelete = new javax.swing.JButton();
        jButtonUpdateEmail = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableContacts = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(null);

        jPanel1.setBackground(new java.awt.Color(46, 204, 113));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setEnabled(false);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Add a new Supplier");

        jButtonRefresh.setBackground(new java.awt.Color(91, 124, 240));
        jButtonRefresh.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        jButtonRefresh.setText("Refresh");
        jButtonRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRefreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButtonRefresh)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 293, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(361, 361, 361))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(0, 483, Short.MAX_VALUE)
                    .addComponent(jLabel2)
                    .addGap(0, 483, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jButtonRefresh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(21, 21, 21))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(0, 30, Short.MAX_VALUE)
                    .addComponent(jLabel2)
                    .addGap(0, 31, Short.MAX_VALUE)))
        );

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 970, 65);

        jPanel2.setLayout(null);

        jLabelName.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabelName.setText("Company Name:");
        jPanel2.add(jLabelName);
        jLabelName.setBounds(20, 50, 188, 30);

        jLabelEmail.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabelEmail.setText("Email Address:");
        jPanel2.add(jLabelEmail);
        jLabelEmail.setBounds(20, 130, 188, 37);

        jLabelPhone.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabelPhone.setText("Phone Number:");
        jPanel2.add(jLabelPhone);
        jLabelPhone.setBounds(20, 210, 188, 40);

        jLabelAddress.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabelAddress.setText("Location/Address:");
        jPanel2.add(jLabelAddress);
        jLabelAddress.setBounds(480, 30, 188, 37);

        jLabelItems.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabelItems.setText("Items Dealt With:");
        jPanel2.add(jLabelItems);
        jLabelItems.setBounds(480, 120, 188, 37);

        jTextFieldName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldNameKeyPressed(evt);
            }
        });
        jPanel2.add(jTextFieldName);
        jTextFieldName.setBounds(160, 50, 220, 40);

        jTextFieldEmail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldEmailKeyPressed(evt);
            }
        });
        jPanel2.add(jTextFieldEmail);
        jTextFieldEmail.setBounds(160, 130, 220, 40);

        jTextFieldPhone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldPhoneActionPerformed(evt);
            }
        });
        jTextFieldPhone.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldPhoneKeyPressed(evt);
            }
        });
        jPanel2.add(jTextFieldPhone);
        jTextFieldPhone.setBounds(160, 210, 220, 40);

        jTextFieldAddress.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldAddressKeyPressed(evt);
            }
        });
        jPanel2.add(jTextFieldAddress);
        jTextFieldAddress.setBounds(650, 30, 220, 40);

        jTextAreaItems.setColumns(20);
        jTextAreaItems.setRows(5);
        jTextAreaItems.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextAreaItemsKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTextAreaItems);

        jPanel2.add(jScrollPane1);
        jScrollPane1.setBounds(650, 120, 220, 80);

        jButtonOk.setBackground(new java.awt.Color(105, 154, 240));
        jButtonOk.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButtonOk.setText("Ok");
        jButtonOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOkActionPerformed(evt);
            }
        });
        jPanel2.add(jButtonOk);
        jButtonOk.setBounds(320, 280, 110, 40);

        jButtonCancel.setBackground(new java.awt.Color(240, 45, 33));
        jButtonCancel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButtonCancel.setText("Cancel");
        jButtonCancel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonCancelMouseClicked(evt);
            }
        });
        jPanel2.add(jButtonCancel);
        jButtonCancel.setBounds(770, 280, 110, 40);

        jButtonEdit.setBackground(new java.awt.Color(105, 154, 240));
        jButtonEdit.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButtonEdit.setText("Edit");
        jButtonEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditActionPerformed(evt);
            }
        });
        jPanel2.add(jButtonEdit);
        jButtonEdit.setBounds(470, 280, 110, 40);

        jButtonDelete.setBackground(new java.awt.Color(105, 154, 240));
        jButtonDelete.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButtonDelete.setText("Delete");
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });
        jPanel2.add(jButtonDelete);
        jButtonDelete.setBounds(620, 280, 110, 40);

        jButtonUpdateEmail.setBackground(new java.awt.Color(204, 204, 255));
        jButtonUpdateEmail.setText("Edit Email");
        jButtonUpdateEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpdateEmailActionPerformed(evt);
            }
        });
        jPanel2.add(jButtonUpdateEmail);
        jButtonUpdateEmail.setBounds(783, 230, 90, 30);

        getContentPane().add(jPanel2);
        jPanel2.setBounds(0, 60, 890, 330);

        jTableContacts.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTableContacts.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableContactsMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTableContacts);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(0, 410, 970, 210);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonCancelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonCancelMouseClicked
            this.dispose();
    }//GEN-LAST:event_jButtonCancelMouseClicked

    public boolean isEmailExist(String Email)
    {
        
        boolean emailExist = false;
        Connection conn = DatabaseConnection.getConnection();
        
        
        PreparedStatement ps;
        ResultSet Rs;
        
        
        try {
            ps = conn.prepareStatement("SELECT Sup_id, sup_Name, Sup_Email, Sup_Phone, Sup_Address,"
                    + " Sup_Main FROM suppliers WHERE"
                    + " Sup_Email = ? ");
            ps.setString(1, jTextFieldEmail.getText());
            
            
            Rs = ps.executeQuery();
            
            if(Rs.next())
            {
               emailExist = true;
            }
            
            
        } catch (SQLException ex) {
            Logger.getLogger(Suppliers.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        finally
        {
            try {
                conn.close();
            } catch (SQLException ex) {
                Logger.getLogger(Suppliers.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
        return emailExist;
        
    }
    
    public boolean verifyData()
    {
        if(jTextFieldName.getText().equals("") || jTextFieldEmail.getText().equals("") 
                || jTextFieldAddress.getText().equals("") || jTextFieldPhone.getText().equals("")
            || jTextAreaItems.getText().equals("") )
        {
            JOptionPane.showMessageDialog(null, "One Or More Fields Are Empty");
            return false; 
        }
        
        else
        {
            return true;
        }
        
    }
    private void jButtonOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOkActionPerformed
       loadSuppliers();
    }//GEN-LAST:event_jButtonOkActionPerformed

    private void jTextFieldPhoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldPhoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldPhoneActionPerformed

    private void jButtonEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditActionPerformed
       Connection conn = DatabaseConnection.getConnection();
        
        PreparedStatement ps;
        
        if(verifyData())
        {
            try {
                ps = conn.prepareStatement("UPDATE suppliers SET sup_Name=?, Sup_Phone=?,Sup_Address=?,Sup_Main=? WHERE Sup_Email = ?");
                
                ps.setString(1, jTextFieldName.getText());
                ps.setString(2, jTextFieldPhone.getText());
                ps.setString(3, jTextFieldAddress.getText());
                ps.setString(4, jTextAreaItems.getText());
                ps.setString(5, jTextFieldEmail.getText());
                
                if(ps.executeUpdate() != 0)
                {
                    JOptionPane.showMessageDialog(null, "Supplier Contact Updated!");
                }
                
                else 
                {
                    JOptionPane.showMessageDialog(null, "Something went wrong!");
                }

            } catch (SQLException ex) {
                Logger.getLogger(Suppliers.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            finally
            {
                try {
                    conn.close();
                } catch (SQLException ex) {
                    Logger.getLogger(Suppliers.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            refreshJTable();
            jTextFieldEmail.setText("");
            jTextFieldName.setText("");
            jTextFieldPhone.setText("");
            jTextFieldAddress.setText("");
            jTextAreaItems.setText("");
        }
    }//GEN-LAST:event_jButtonEditActionPerformed

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
        Connection Conn = DatabaseConnection.getConnection();
        PreparedStatement st;
       
        
        try {
            
            int x = JOptionPane.showConfirmDialog(null, "Sure To Delete This Contact?");
            if(x == 0)
            {
                st = Conn.prepareStatement("DELETE FROM suppliers WHERE Sup_Email = ?");
                     st.setString(1, jTextFieldEmail.getText());
                        
                    if(st.executeUpdate() != 0)
                    {
                        JOptionPane.showMessageDialog(null, "Contact Deleted!");
                    }
                    
                    else
                    {
                        JOptionPane.showMessageDialog(null, "Something Went Wrong!");
                    }
                
            }
            
            
        } catch (SQLException ex) {
            Logger.getLogger(Suppliers.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        finally
        {
            try {
                Conn.close();
            } catch (SQLException ex) {
                Logger.getLogger(Suppliers.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        refreshJTable();
        jTextFieldEmail.setText("");
        jTextFieldName.setText("");
        jTextFieldPhone.setText("");
        jTextFieldAddress.setText("");
        jTextAreaItems.setText("");
        
    }//GEN-LAST:event_jButtonDeleteActionPerformed

    private void jTableContactsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableContactsMouseClicked
        int rowIndex = jTableContacts.getSelectedRow();
        
        jTextFieldName.setText((String)jTableContacts.getValueAt(rowIndex, 1));
        jTextFieldAddress.setText((String)jTableContacts.getValueAt(rowIndex, 3));
        jTextFieldEmail.setText((String)jTableContacts.getValueAt(rowIndex, 2));
        jTextFieldPhone.setText((String)jTableContacts.getValueAt(rowIndex, 5));
        jTextAreaItems.setText((String)jTableContacts.getValueAt(rowIndex, 4));
        
        jTextFieldEmail.setEditable(false);
    }//GEN-LAST:event_jTableContactsMouseClicked

    private void jButtonUpdateEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUpdateEmailActionPerformed
        Connection conn = DatabaseConnection.getConnection();
        
        PreparedStatement ps;
        
        if(verifyData())
        {
            try {
                ps = conn.prepareStatement("UPDATE suppliers SET Sup_Email=? WHERE sup_Name = ? OR Sup_Phone = ?");
                
                
                ps.setString(1, jTextFieldEmail.getText());
                ps.setString(2, jTextFieldName.getText());
                ps.setString(3, jTextFieldPhone.getText());
               
                
                if(ps.executeUpdate() != 0)
                {
                    JOptionPane.showMessageDialog(null, "Supplier Email Updated!");
                }
                
                else 
                {
                    JOptionPane.showMessageDialog(null, "Something went wrong!");
                }

            } catch (SQLException ex) {
                Logger.getLogger(Suppliers.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            finally
            {
                try {
                    conn.close();
                } catch (SQLException ex) {
                    Logger.getLogger(Suppliers.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            refreshJTable();
            jTextFieldEmail.setText("");
            jTextFieldName.setText("");
            jTextFieldPhone.setText("");
            jTextFieldAddress.setText("");
            jTextAreaItems.setText("");
            
        }
    }//GEN-LAST:event_jButtonUpdateEmailActionPerformed

    private void jButtonRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRefreshActionPerformed
        refreshJTable();
        jTextFieldEmail.setText("");
        jTextFieldName.setText("");
        jTextFieldPhone.setText("");
        jTextFieldAddress.setText("");
        jTextAreaItems.setText("");
        
        jTextFieldEmail.setEditable(true);
    }//GEN-LAST:event_jButtonRefreshActionPerformed

    private void jTextAreaItemsKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextAreaItemsKeyPressed
       int vk=evt.getKeyCode();
       
       if(vk==KeyEvent.VK_ENTER)
       {
           loadSuppliers();
       }
       
    }//GEN-LAST:event_jTextAreaItemsKeyPressed

    private void jTextFieldAddressKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldAddressKeyPressed
       int vk=evt.getKeyCode();
       
       if(vk==KeyEvent.VK_ENTER)
       {
           loadSuppliers();
       }
       
    }//GEN-LAST:event_jTextFieldAddressKeyPressed

    private void jTextFieldNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldNameKeyPressed
        int vk=evt.getKeyCode();
       
       if(vk==KeyEvent.VK_ENTER)
       {
           loadSuppliers();
       }
       
    }//GEN-LAST:event_jTextFieldNameKeyPressed

    private void jTextFieldEmailKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldEmailKeyPressed
         int vk=evt.getKeyCode();
       
       if(vk==KeyEvent.VK_ENTER)
       {
           loadSuppliers();
       }
          
    }//GEN-LAST:event_jTextFieldEmailKeyPressed

    private void jTextFieldPhoneKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldPhoneKeyPressed
        int vk=evt.getKeyCode();
       
       if(vk==KeyEvent.VK_ENTER)
       {
           loadSuppliers();
       }
       
    }//GEN-LAST:event_jTextFieldPhoneKeyPressed

    
    // Displaying the contacts in the table
    
    public final void populateJtable()
    {
        Connection conn = DatabaseConnection.getConnection();
        Statement statement;
        ResultSet rset;
        
        try {
            statement = conn.createStatement();
            rset = statement.executeQuery("SELECT COUNT(*) FROM suppliers");
            
            SupplierQuery sq = new SupplierQuery();
            
            ArrayList<SupplierContacts> sList = sq.supplierList();
            
            String[] colNames = {"", "Supplier Name", "Email Address", "Phone Number", "Items Dealt With", "Location/Address"};
            Object[][] rows = new Object[sList.size()][6];
            
            int j = 1;
            
            while(rset.next())
            {
                for(int i = 0; i<sList.size(); i++)
                {
                   rows[i][0] = j;
                  rows[i][1] = sList.get(i).getName();
                  rows[i][2] = sList.get(i).getEmail();
                  rows[i][3] = sList.get(i).getMobile();
                  rows[i][4] = sList.get(i).getAddress();
                  rows[i][5] = sList.get(i).getItems();
                  
                  SupplierDisplayModel md = new SupplierDisplayModel(rows, colNames);
                  jTableContacts.setModel(md);
                  jTableContacts.setRowHeight(50);
                  
                  DefaultTableCellRenderer center = new DefaultTableCellRenderer();
                center.setHorizontalAlignment(JLabel.CENTER);
                jTableContacts.setDefaultRenderer(String.class, center);
                    j++;
                }
                
               
            }
        } catch (SQLException ex) {
            Logger.getLogger(Suppliers.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        finally
        {
            try {
                conn.close();
            } catch (SQLException ex) {
                Logger.getLogger(Suppliers.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    
        
        
    }
        
    
    //Inserting the suppliers into the table
   private void loadSuppliers()
   {
        Connection conn = DatabaseConnection.getConnection();
        
        PreparedStatement ps;
        
        if(verifyData())
        {
            try {
                ps = conn.prepareStatement("INSERT INTO `suppliers`(`sup_Name`, `Sup_Email`, `Sup_Phone`, `Sup_Address`, `Sup_Main`) VALUES (?, ?, ?, ?, ?)");
                ps.setString(1, jTextFieldName.getText());
                ps.setString(2, jTextFieldEmail.getText());
                ps.setString(3, jTextFieldPhone.getText());
                ps.setString(4, jTextFieldAddress.getText());
                ps.setString(5, jTextAreaItems.getText());
                
                if(isEmailExist(jTextFieldEmail.getText()))
                {
                    JOptionPane.showMessageDialog(null, "Supplier Already Exists");
                }
                else if(ps.executeUpdate() != 0)
                {
                    JOptionPane.showMessageDialog(null, "New Supplier Added");
                }
                
                else 
                {
                    JOptionPane.showMessageDialog(null, "Something went wrong");
                }

            } catch (SQLException ex) {
                Logger.getLogger(Suppliers.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            finally
            {
                try {
                    conn.close();
                } catch (SQLException ex) {
                    Logger.getLogger(Suppliers.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            
            refreshJTable();
            jTextFieldEmail.setText("");
            jTextFieldName.setText("");
            jTextFieldPhone.setText("");
            jTextFieldAddress.setText("");
            jTextAreaItems.setText("");
        }
   }
        public void refreshJTable()
        {
            jTableContacts.setModel(new DefaultTableModel());
            populateJtable();
        }
        
        
            //setting upp the logo
private void setIcon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("logo1.png")));
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Suppliers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Suppliers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Suppliers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Suppliers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Suppliers().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCancel;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonEdit;
    private javax.swing.JButton jButtonOk;
    private javax.swing.JButton jButtonRefresh;
    private javax.swing.JButton jButtonUpdateEmail;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabelAddress;
    private javax.swing.JLabel jLabelEmail;
    private javax.swing.JLabel jLabelItems;
    private javax.swing.JLabel jLabelName;
    private javax.swing.JLabel jLabelPhone;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableContacts;
    private javax.swing.JTextArea jTextAreaItems;
    private javax.swing.JTextField jTextFieldAddress;
    private javax.swing.JTextField jTextFieldEmail;
    private javax.swing.JTextField jTextFieldName;
    private javax.swing.JTextField jTextFieldPhone;
    // End of variables declaration//GEN-END:variables
}
